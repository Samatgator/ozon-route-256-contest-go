{
  "task": {
    "title": "Корень дерева",
    "number": "3",
    "score": "10",
    "testExamples": [
      {
        "input": "7\n17\n3 0 1 0 5 2 2 6 4 3 5 1 3 2 0 6 0\n11\n3 1 1 1 2 4 2 4 0 2 0\n5\n1 0 2 1 1\n2\n1 0\n11\n2 1 3 1 0 4 1 2 3 1 1\n14\n4 1 5 5 2 2 1 2 1 3 1 0 3 0\n5\n1 1 2 2 0\n",
        "output": "4\n3\n2\n1\n4\n4\n1\n"
      }
    ],
    "condition": "Корневое дерево — абстрактная структура данных, состоящая из вершин, соединённых рёбрами. В этой структуре данных есть ровно одна вершина, называемая корнем. Каждая вершина соединена рёбрами со своими сыновьями. Каждая вершина, кроме корня, имеет ровно одного родителя. Количество рёбер дерева на $1$ меньше количества его вершин.\n\nВ этой задаче вершины дерева пронумерованы числами от $1$ до $n$ в произвольном порядке. \n\nНиже приведены изображения трёх различных корневых деревьев.\n\n$\\includegraphics[height=90px, totalheight=80px, width=280px, alt= map_1]{https://cdn1.ozone.ru/s3/taskbook-images-store/tree_root.png}$\n$\\smallУ\\:первого\\:дерева\\: корнем\\: является \\:вершина\\: с\\: номером\\: 4,\n\\:у \\:второго\\: дерева \\:корнем\\: является\\: вершина \\:с\\: номером \\:3,\n\\:у \\:третьего \\:дерева \\:корнем \\:является\\: вершина\\: с\\: номером\\: 2.$\n\nЗакодируем дерево в виде последовательности (массива) целых чисел.\n\nДля этого выпишем в последовательность в произвольном порядке подряд коды всех вершин. Кодом вершины $u$ называется последовательность из $d_u+2$ чисел (где $d_u$ — количество сыновей вершины $u$): \n\n$\\custombullet$ первое число кода вершины — её номер $u$,\n$\\custombullet$ второе число кода вершины — количество её детей $d_u$, называемое также степенью этой вершины,\n$\\custombullet$ затем следуют $d$ чисел — номера сыновей в произвольном порядке.\n\nОбратите внимание, что как вершина, так и само дерево в общем случае может быть закодировано неоднозначно.\n\nНапример, возможный код вершины $5$ для первого дерева из примера может иметь вид: $[5, 2, 2, 6$].\n\nВозможные коды деревьев из примера:\n\n$\\custombullet$ код первого дерева: $[3, 0, 1, 0, 5, 2, 2, 6, 4, 3, 5, 1, 3, 2, 0, 6, 0]$ — в этом коде записаны вершины в следующем порядке $[3, 1, 5, 4, 2, 6]$;\n$\\custombullet$ код второго дерева: $[3, 1, 1, 1, 2, 4, 2, 4, 0, 2, 0]$ — в этом коде записаны вершины в следующем порядке $[3, 1, 4, 2]$;\n$\\custombullet$ код третьего дерева: $[1, 0, 2, 1, 1]$ — в этом коде записаны вершины в следующем порядке $[1, 2]$.\n\nНапишите программу, которая по коду дерева выводит номер его корня.",
    "inputFormat": "stdin",
    "outputFormat": "stdout",
    "inputFormatDescription": "В первой строке входных данных записано целое число $t$ ($1 \\le t \\le 100$) — количество наборов входных данных.\n\nНаборы входных данных в тесте независимы. Друг на друга они никак не влияют.\n\nКаждый набор входных данных состоит из двух строк.\n\nВ первой из них записано целое число $m$ ($2 \\le m \\le 100$) — длина последовательности, которая является кодом заданного дерева. Во второй содержится последовательность целых чисел $a_1, a_2, \\dots, a_m$ $(0 \\le a_i < 99)$ — код заданного дерева. Гарантируется, что $a$ является корректным кодом некоторого корневого дерева.",
    "outputFormatDescription": "Выведите $t$ строк — ответы на заданные наборы входных данных: $j$-я строка должна содержать номер вершины, которая является корнем в $j-м$ наборе входных данных.",
    "languages": ["GO"],
    "timeLimit": 2000,
    "memoryLimit": 512,
    "testArchiveUrl": "test-examples-taskbook-api/323.zip",
    "countOfSuccessSolvers": "267",
    "partiallyScores": []
  }
}
