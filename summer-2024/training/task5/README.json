{
  "task": {
    "title": "JSON prettify",
    "number": "5",
    "score": "20",
    "testExamples": [
      {
        "input": "3\n6\n{\n\"a\": \"f\",\n\"b\": {\"c\": {\"d\": [], \"e\": [\"ababa\"]}},\n\"c\": {\"k\": {}},\n\"d\": {\"d\": {\"e\": {}}}\n}\n2\n[{}, [], {}, \t{}, \"string\"  \n]\n3\n[{\"one\":\n\t[{\"two\":\n\t\t[{\"three\":\"four\"}]}]}]\n",
        "output": "[{\"a\":\"f\",\"b\":{\"c\":{\"e\":[\"ababa\"]}}},[\"string\"],[{\"one\":[{\"two\":[{\"three\":\"four\"}]}]}]]\n"
      }
    ],
    "userStatus": {
      "key": "NOT_START",
      "label": "Новая"
    },
    "condition": "Дан JSON-объект, который состоит из списков, словарей и строк.\n\nК этому JSON-объекту нужно применить операцию prettify. Операция заключается в удалении пустых списков и словарей.\n$\\custombullet$ Если значение некоторого ключа в словаре — пустой список или словарь, то значение удаляется вместе с ключом. \n$\\custombullet$ Если элемент некоторого списка — пустой список или словарь, то элемент удаляется, а порядок остальных элементов в этом списке не изменяется. \n\nОперация prettify применяется до тех пор, пока в JSON-объекте есть пустые словари или списки.\n\nВыведите JSON-объект, полученный после применения операции prettify. Гарантируется что в результате работы prettify JSON-объект не станет пустым.",
    "inputFormat": "stdin",
    "outputFormat": "stdout",
    "inputFormatDescription": "Каждый тест состоит из нескольких наборов входных данных.\n\nПервая строка содержит целое число $t$ $(1 \\le t \\le 100)$ — количество наборов входных данных.\n\nДалее следуют описания наборов входных данных.\n\nПервая строка каждого набора входных данных содержит целое число $n$ $(1 \\le n \\le 2\\cdot 10^4)$ — количество строк, на которых записан JSON-объект.\n\nСледующие $n$ строк каждого набора входных данных содержат JSON-объект.\n\nЭлементы JSON-объекта могут быть разделены пробелами и символами табуляции.\n\nГарантируется, что:\n$\\custombullet$ Суммарное количество словарей, списков и строк во всех наборах входных данных не превосходит $10^4$.  \n$\\custombullet$ Все строки в JSON-объекте непустые, состоят из строчных латинских букв, и длина каждой строки не превосходит 10.\n$\\custombullet$ Размер теста не превосходит 1MB.",
    "outputFormatDescription": "Выведите один JSON-список из $t$ элементов. $i$-й элемент списка является $i$-м JSON-объектом из входных данных после применения к нему операции prettify. При проверке ответа пробелы, символы табуляции и переносы строки не учитываются. Порядок ключей в словаре не учитывается.\n\nЛюбые внешние библиотеки использовать нельзя.\n$\\custombullet$ Для работы с JSON в языке C Sharp можно пользоваться библиотекой \"System.Text.Json\": $\\url{https://learn.microsoft.com/en-us/dotnet/api/system.text.json?view=net-7.0}$\nВозможно, вам понадобится увеличить максимальную глубину сериализации/десериализации JSON $\\url{https://learn.microsoft.com/en-us/dotnet/api/system.text.json.jsonserializeroptions.maxdepth?view=net-7.0}$\n$\\custombullet$ Для работы с JSON в языке Go можно пользоваться библиотекой \"encoding/json\": $\\url{https://pkg.go.dev/encoding/json}$",
    "languages": ["GO"],
    "timeLimit": 1000,
    "memoryLimit": 256,
    "testArchiveUrl": "test-examples-taskbook-api/283.zip",
    "countOfSuccessSolvers": "146",
    "partiallyScores": []
  }
}
