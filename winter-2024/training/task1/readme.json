{
  "task": {
    "title": "Морской бой",
    "number": "1",
    "score": "5",
    "testExamples": [
      {
        "input": "5\n2 1 3 1 2 3 1 1 4 2\n1 1 1 2 2 2 3 3 3 4\n1 1 1 1 2 2 2 3 3 4\n4 3 3 2 2 2 1 1 1 1\n4 4 4 4 4 4 4 4 4 4",
        "output": "YES\nNO\nYES\nYES\nNO"
      }
    ],
    "userStatus": {
      "key": "SOLVED",
      "label": "Решена"
    },
    "condition": "Это наиболее простая задача контеста. Надеемся, что вы познакомитесь с тестирующей системой Ozon Techpoint.\n\nПравильные решения задач должны проходить все заранее заготовленные тесты жюри и укладываться в ограничения по времени/памяти на каждом тесте.\n\nНиже перечислены технические требования к решениям:\n$\\bullet$ решение читает входные данные со стандартного ввода (экрана);\n$\\bullet$ решение пишет выходные данные на стандартный вывод (экран);\n$\\bullet$ решение не взаимодействует как-либо с другими ресурсами компьютера (сеть, жесткий диск, процессы и прочее);\n$\\bullet$ решение использует только стандартную библиотеку языка;\n$\\bullet$ решение располагается в пакете по-умолчанию (или его аналоге для вашего языка), имеют стандартную точку входа для консольных программ;\n$\\bullet$ гарантируется, что во всех тестах выполняются все ограничения, что содержатся в условии задачи — как-либо проверять входные данные на корректность не надо, все тесты строго соответствуют описанному в задаче формату;\n$\\bullet$ выводи ответ в точности в том формате, как написано в условии задачи (не надо выводить <<поясняющих>> комментариев типа $\\it{введите\\: число}$ или $\\it{ответ\\: равен}$);\n\nПерейдём к задаче.\n\nВы участвуете в разработке подсистемы проверки поля для игры <<Морской бой>>. Вам требуется написать проверку корректности количества кораблей на поле, учитывая их размеры. Напомним, что на поле должны быть:\n$\\bullet$ четыре однопалубных корабля,\n$\\bullet$ три двухпалубных корабля,\n$\\bullet$ два трёхпалубных корабля,\n$\\bullet$ один четырёхпалубный корабль.\n\nВам заданы $10$ целых чисел от $1$ до $4$. Проверьте, что заданные размеры соответствуют требованиям выше.",
    "inputFormat": "stdin",
    "outputFormat": "stdout",
    "inputFormatDescription": "В первой строке записано целое число $t$ ($1 \\le t \\le 1000$) — количество наборов входных данных в тесте.\n\nНаборы входных данных в тесте независимы. Друг на друга они никак не влияют.\n\nКаждый набор входных данных состоит из одной строки, которая содержит $10$ целых чисел $a_1, a_2, \\ldots, a_{10}$ ($1 \\le a_i \\le 4$) — размеры кораблей на поле в произвольном порядке.\n\nОбратите внимание, что уже гарантируется, что кораблей на поле ровно $10$ и их размеры от $1$ до $4$, включительно. Вам необходимо проверить, что количество кораблей каждого типа соответствует правилам игры.",
    "outputFormatDescription": "Для каждого набора входных данных в отдельной строке выведите:\n\n$\\bullet$ $\\texttt{YES}$, если заданные размеры кораблей на поле соответствуют правилам игры;\n$\\bullet$ $\\texttt{NO}$ в противном случае.\n\nВы можете выводить $\\texttt{YES}$ и $\\texttt{NO}$ в любом регистре (например, строки $\\texttt{yEs}$, $\\texttt{yes}$, $\\texttt{Yes}$ и $\\texttt{YES}$ будут распознаны как положительный ответ).\n",
    "languages": ["GO"],
    "timeLimit": 2000,
    "memoryLimit": 512,
    "testArchiveUrl": "test-examples-taskbook-api/44.zip"
  }
}
