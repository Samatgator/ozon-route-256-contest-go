{
  "task": {
    "title": "Печать документа",
    "number": "7",
    "score": "30",
    "testExamples": [
      {
        "input": "7\n8\n7\n8\n1,7,1\n8\n1-5,1,7-7\n10\n1-5\n10\n1,2,3,4,5,6,8,9,10\n3\n1-2\n100\n1-2,3-7,10-20,100",
        "output": "1-6,8\n2-6,8\n6,8\n6-10\n7\n3\n8-9,21-99"
      }
    ],
    "userStatus": { "key": "SOLVED", "label": "Решена" },
    "condition": "Необходимо напечатать документ из $k$ страниц. Его страницы пронумерованы от $1$ до $k$.\n\nНекоторые его страницы были уже предварительно напечатаны. Известно, что на принтер было отослано одно задание, которое содержало список страниц для печати.\n\nЭтот список содержит хотя бы одну страницу, и хотя бы одна страница от $1$ до $k$ не попадает в этот список. Список страниц состоит из перечисленных через единичную запятую элементов списка, где каждый элемент — это:\n\n$\\bullet$ либо конкретный номер одной страницы (целое число от $1$ до $k$),\n\n$\\bullet$ либо диапазон страниц, записанный в формате «$l$-$r$», где $l$ — начало диапазона печати, а $r$ — конец диапазона печати (и $l$ и $r$ целые числа, удовлетворяющие неравенству $1 \\le l \\le r \\le k$).\n\nСтраница может многократно присутствовать в списке на печать, но будет напечатана лишь единожды.\n\nИными словами, список страниц имеет формат, аналогичный тому, что используется в «Microsoft Word» или других подобных программах.\n\nНапример, если $k=8$, то допустимые списки страниц:\n\n$\\bullet$ $\\texttt{7}$ (была напечатана лишь страница $7$),\n$\\bullet$ $\\texttt{1,7,1}$ (были напечатаны страницы $1$ и $7$),\n$\\bullet$ $\\texttt{1-5,1,7-7}$ (были напечатаны страницы $1,2,3,4,5,7$).\n\nПримеры неправильных диапазонов для $k=8$ (такие входные данные недопустимы):\n\n$\\bullet$ $\\texttt{1-8}$ (хотя бы одна страница документа должна быть еще не напечатана),\n\n$\\bullet$ $\\texttt{1,,3}$ (две запятые не могут идти подряд),\n\n$\\bullet$ $\\texttt{7-9}$ (девятую страницу нельзя послать на печать),\n\n$\\bullet$ $\\texttt{1-5,}$ (каждая запятая должна разделять два элемента, заканчивать список она не может),\n\n$\\bullet$ $\\texttt{,1,2,3-5}$ (каждая запятая должна разделять два элемента, начинать список она не может),\n\n$\\bullet$ $\\texttt{3-4-7}$ (нарушен формат элемента, так нельзя).\n\nВыведите кратчайший список страниц в аналогичном формате, который надо дополнительно послать на печать, чтобы в итоге напечатать все страницы от $1$ до $k$, не напечатанные ранее.\n\nИными словами, найдите такую наиболее короткую строку, которая является корректным списком страниц и содержит те и только те страницы, которые еще не были напечатаны.\n\nЕсли ответов несколько, то выведите любой из них.\n",
    "inputFormat": "stdin",
    "outputFormat": "stdout",
    "inputFormatDescription": "В первой строке входных данных записано целое число $t$ ($1 \\le t \\le 100$) — количество наборов входных данных.\n\nНаборы входных данных в тесте независимы. Друг на друга они никак не влияют.\n\nВ первой строке каждого набора записано целое число $k$ ($2 \\le k \\le 100$) — количество страниц в документе.\n\nВторая строка каждого набора содержит список страниц, которые уже были посланы на печать. Этот список корректен и отформатирован строго по правилам, написанным выше. Он содержит только страницы от $1$ до $k$, содержит хотя бы одну страницу, и хотя бы одна страница от $1$ до $k$ в него не входит. Строка не содержит пробелы или какие-либо другие дополнительные символы. \nДлина этой строки — от $1$ до $400$, включительно. ",
    "outputFormatDescription": "Выведите $t$ строк — для каждого набора входных данных выведите кратчайшую строку, содержащую корректный список страниц, которые надо допечатать и только их. Если оптимальных ответов несколько, то выведите любой из них.\n",
    "languages": ["GO"],
    "timeLimit": 2500,
    "memoryLimit": 512,
    "testArchiveUrl": "test-examples-taskbook-api/42.zip",
    "countOfSuccessSolvers": "83"
  }
}
