{
  "task": {
    "title": "3-Покер",
    "number": "8",
    "score": "35",
    "testExamples": [
      {
        "input": "4\n2\nTS TC\nAD AH\n3\n2H 3H\n9S 9C\n4D QS\n3\n4C 7H\n4H 4D\n6S 6H\n3\n2S 3H\n2C 2D\n3C 3D\n",
        "output": "2\nTD\nTH\n0\n3\n7S\n7C\n7D\n0\n"
      },
      {
        "input": "1\n7\nAS AC\nAD AH\nKS JH\n9D 9C\n5H 5D\n3C 3S\nTC TH\n",
        "output": "30\n2S\n2C\n2D\n2H\n4S\n4C\n4D\n4H\n6S\n6C\n6D\n6H\n7S\n7C\n7D\n7H\n8S\n8C\n8D\n8H\nJS\nJC\nJD\nQS\nQC\nQD\nQH\nKC\nKD\nKH\n"
      }
    ],
    "userStatus": {
      "key": "SOLVED",
      "label": "Решена"
    },
    "condition": "Колода состоит из 52 карт. Каждая карта обозначается одним из тринадцати значений ($\\textbf{2}$, $\\textbf{3}$, $\\textbf{4}$, $\\textbf{5}$, $\\textbf{6}$, $\\textbf{7}$, $\\textbf{8}$, $\\textbf{9}$, $\\textbf{T}$en, $\\textbf{J}$ack, $\\textbf{Q}$ueen, $\\textbf{K}$ing, $\\textbf{A}$ce) и одной из четырех мастей ($\\textbf{S}$pades, $\\textbf{C}$lubs, $\\textbf{D}$iamonds, $\\textbf{H}$earts).\n\nВыдуманная игра 3-Покер происходит следующим образом.\n\n1. Изначально все $n$ игроков получают по две карты из колоды.\n2. После этого на стол выкладывается одна карта из той же колоды.\n2. Выигрывают те игроки, у которых собралась самая старшая комбинация.\n\nДля определения самой старшей комбинации, которая собралась у $i$-го игрока, используются следующие правила:\n\n$\\bullet$ если две карты у игрока в руке и карта на столе имеют одинаковое значение, игрок собрал комбинацию $\\lq\\textit{Сет со значением $x$}\\ \\text{\\textquoteright}$;\n$\\bullet$ если из двух карт у игрока в руке и карты на столе можно выбрать две карты с одинаковым значением $x$, игрок собрал комбинацию $\\lq \\textit{Пара со значением $x$}\\ \\text{\\textquoteright}$;\n$\\bullet$ иначе, берется карта с самым старшим значением из двух карт у игрока в руке и карты на столе, тогда игрок собрал комбинацию $\\lq \\textit{Старшая карта $x$} \\ \\text{\\textquoteright}$.\n\nЛюбой $\\textit{сет}$ старше $\\textit{пары}$, а любая $\\textit{пара}$ старше комбинации $\\textit{старшая карта}$. Из одинаковых комбинаций старше та, у которой старше значение. Если одинаковая самая старшая комбинация есть у нескольких игроков, все они объявляются выигрывшими.\n\nВы — первый игрок. Вам известно, какие карты получил на руки каждый игрок. Определите, какую карту можно выложить на стол, чтобы вы оказались в числе победителей.",
    "inputFormat": "stdin",
    "outputFormat": "stdout",
    "inputFormatDescription": "Каждый тест состоит из нескольких наборов входных данных. Первая строка содержит целое число $t$ ($1 \\le t \\le 10^3$) — количество наборов входных данных. Далее следует описание наборов входных данных.\n\nПервая строка каждого набора входных данных содержит целое число $n$ ($2 \\le n \\le 25$) — количество игроков.\n\nСледующие $n$ строк каждого набора входных данных содержат описания двух карт, разделенных пробелом — карты, которые получил на руки $i$-й игрок.\n\nОписание карты состоит из двух символов, записанных подряд: значения и масти.",
    "outputFormatDescription": "Для каждого набора входных данных выведите в первой строке количество карт $k$, которые можно выложить на стол для вашей победы. В следующих $k$ строках выведите описания этих карт. Выводить описания можно в любом порядке.\n\nРазберем первый пример.\n\nВ первом наборе входных данных для победы первого игрока можно выложить на стол десятку ($\\textbf{T}$), тогда первый игрок выиграет с комбинацией сет со значением $\\textbf{T}$.\n\nВо втором наборе входных данных невозможно добиться победы первого игрока.\n\nВ третьем наборе входных данных для победы первого игрока можно выложить на стол семерку ($\\textbf{7}$), тогда первый игрок выиграет с комбинацией пара со значением $\\textbf{7}$.\n\nВ четвертом наборе входных данных невозможно добиться победы первого игрока.\n",
    "languages": ["GO"],
    "timeLimit": 1000,
    "memoryLimit": 256,
    "testArchiveUrl": "test-examples-taskbook-api/47.zip",
    "countOfSuccessSolvers": "54"
  }
}
