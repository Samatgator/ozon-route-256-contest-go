{
  "task": {
    "title": "Битва за кондиционер",
    "number": "4",
    "score": "15",
    "testExamples": [
      {
        "input": "4\n1\n>= 30\n6\n>= 18\n<= 23\n>= 20\n<= 27\n<= 21\n>= 28\n3\n<= 25\n>= 20\n>= 25\n3\n<= 15\n>= 30\n<= 24\n",
        "output": "30\n\n18\n18\n20\n20\n20\n-1\n\n15\n20\n25\n\n15\n-1\n-1\n\n"
      }
    ],
    "userStatus": {
      "key": "SOLVED",
      "label": "Решена"
    },
    "condition": "В офисе стоит кондиционер, на котором можно установить температуру от $15$ до $30$ градусов.\n\nВ офис по очереди приходят $n$ сотрудников. $i$-й из них желает температуру не больше или не меньше $a_i$.\n\nПосле прихода каждого сотрудника определите, можно ли выставить температуру, которая удовлетворит всех в офисе.",
    "inputFormat": "stdin",
    "outputFormat": "stdout",
    "inputFormatDescription": "Каждый тест состоит из нескольких наборов входных данных. Первая строка содержит целое число $t$ ($1 \\le t \\le 10^3$) — количество наборов входных данных. Далее следует описание наборов входных данных.\n\nПервая строка каждого набора содержит целое число $n$ ($1 \\le n \\le 10^3$) — количество сотрудников.\n\n$i$-я из следующих $n$ строк каждого набора входных данных содержит требование к температуре от $i$-го сотрудника: либо $\\geq a_i$, либо $\\leq a_i$ ($15 \\le a_i \\le 30$, $a_i$ — целое число). Требование $\\geq a_i$ означает, что $i$-й сотрудник желает температуру не ниже $a_i$; требование $\\leq a_i$ означает, что $i$-й сотрудник желает температуру не выше $a_i$.\n\nГарантируется, что сумма $n$ по всем наборам входных данных не превосходит $10^3$.",
    "outputFormatDescription": "Для каждого набора входных данных выведите $n$ строк, $i$-я из которых содержит температуру, удовлетворяющую всех сотрудников с номерами от $1$ до $i$ включительно. Если такой температуры не существует, выведите $-1$. После вывода ответа на очередной набор входных данных выводите пустую строку.\n\nЕсли ответов несколько, выведите любой.\n\nПояснение к первому примеру:\n\n1. добавляется требование $\\geq 30$, диапазон возможных температур — [30, 30], поэтому единственный возможный ответ — 30 градусов.\n\nПояснение ко второму примеру:\n\n1. добавляется требование $\\geq 18$, диапазон возможных температур — [18, 30], поэтому в качестве примера взяли 29 градусов;\n\n2. добавляется требование $\\leq 23$, диапазон возможных температур — [18, 23], поэтому в качестве примера взяли 19 градусов;\n\n3. добавляется требование $\\geq 20$, диапазон возможных температур — [20, 23], поэтому в качестве примера взяли 22 градуса;\n\n4. добавляется требование $\\leq 27$, диапазон возможных температур — [20, 23], поэтому в качестве примера взяли 21 градус;\n\n5. добавляется требование $\\leq 21$, диапазон возможных температур —[20, 21], поэтому в качестве примера взяли 20 градусов;\n\n6. добавляется требование $\\geq 28$, диапазон возможных температур — [28, 21], поэтому ответа нет и нужно вывести -1.\n\nПояснение к третьему примеру:\n\n1. добавляется требование $\\leq 25$, диапазон возможных температур — [15, 25], поэтому в качестве примера взяли 23 градуса;\n\n2. добавляется требование $\\geq 20$, диапазон возможных температур — [20, 25], поэтому в качестве примера взяли 22 градуса;\n\n3. добавляется требование $\\geq 25$, диапазон возможных температур — [25, 25], поэтому в качестве примера можно взять только 25 градусов.\n\nПояснение к четвертому примеру:\n\n1. добавляется требование $\\leq 15$, диапазон возможных температур — [15, 15], поэтому в качестве примера можно взять только 15 градусов;\n\n2. добавляется требование $\\geq 30$, диапазон возможных температур — [30, 15], поэтому ответа нет и нужно вывести -1;\n\n3. добавляется требование $\\leq 24$, диапазон возможных температур — [30, 15], поэтому ответа нет и нужно вывести -1.",
    "languages": ["GO"],
    "timeLimit": 1000,
    "memoryLimit": 256,
    "testArchiveUrl": "test-examples-taskbook-api/46.zip",
    "countOfSuccessSolvers": "173"
  }
}
